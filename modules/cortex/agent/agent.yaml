prometheus:
  configs:
  - host_filter: true
    name: agent
    remote_write:
    - url: ${remote_write_url}
      tls_config:
        insecure_skip_verify: true
    scrape_configs:
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: drop
        regex: "false"
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - action: keep
        regex: .*-metrics
        source_labels:
        - __meta_kubernetes_pod_container_port_name
      - action: replace
        regex: (https?)
        replacement: $1
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        replacement: $1
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: (.+?)(\:\d+)?;(\d+)
        replacement: $1:$3
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: drop
        regex: ""
        source_labels:
        - __meta_kubernetes_pod_label_name
      - action: replace
        replacement: $1
        separator: /
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_pod_label_name
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: pod
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_container_name
        target_label: container
      - action: replace
        separator: ':'
        source_labels:
        - __meta_kubernetes_pod_name
        - __meta_kubernetes_pod_container_name
        - __meta_kubernetes_pod_container_port_name
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
        replacement: __param_$1
      - action: drop
        regex: Succeeded|Failed
        source_labels:
        - __meta_kubernetes_pod_phase
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: false
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: default/kube-state-metrics
      kubernetes_sd_configs:
      - namespaces:
          names:
          - default
        role: pod
      relabel_configs:
      - action: keep
        regex: kube-state-metrics
        source_labels:
        - __meta_kubernetes_pod_label_name
      - action: replace
        separator: ':'
        source_labels:
        - __meta_kubernetes_pod_name
        - __meta_kubernetes_pod_container_name
        - __meta_kubernetes_pod_container_port_name
        target_label: instance
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: false
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: default/node-exporter
      kubernetes_sd_configs:
      - namespaces:
          names:
          - default
        role: pod
      relabel_configs:
      - action: keep
        regex: node-exporter
        source_labels:
        - __meta_kubernetes_pod_label_name
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: instance
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: false
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kube-system/kubelet
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - replacement: kubernetes.default.svc.cluster.local:443
        target_label: __address__
      - replacement: https
        target_label: __scheme__
      - regex: (.+)
        replacement: /api/v1/nodes/$${1}/proxy/metrics
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: false
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kube-system/cadvisor
      kubernetes_sd_configs:
      - role: node
      metric_relabel_configs:
      - action: drop
        regex: container_([a-z_]+);
        source_labels:
        - __name__
        - image
      - action: drop
        regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
        source_labels:
        - __name__
      relabel_configs:
      - replacement: kubernetes.default.svc.cluster.local:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: false
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: default/kubernetes
      kubernetes_sd_configs:
      - role: endpoints
      metric_relabel_configs:
      - action: drop
        regex: apiserver_admission_controller_admission_latencies_seconds_.*
        source_labels:
        - __name__
      - action: drop
        regex: apiserver_admission_step_admission_latencies_seconds_.*
        source_labels:
        - __name__
      relabel_configs:
      - action: keep
        regex: apiserver
        source_labels:
        - __meta_kubernetes_service_label_component
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: false
  global:
    scrape_interval: 15s
  wal_directory: ${wal_directory}
server:
  log_level: ${log_level}
